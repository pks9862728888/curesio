# Generated by Django 2.2.9 on 2020-01-31 12:01

import core.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, validators=[django.core.validators.EmailValidator], verbose_name='Email')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='Username')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff')),
                ('is_doctor', models.BooleanField(default=False, verbose_name='Is Doctor')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': (('is_active', 'User is active'), ('is_staff', 'User is staff'), ('is_doctor', 'User is doctor')),
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('state', models.CharField(choices=[('AN', 'Andaman and Nicobar Islands'), ('AP', 'Andhra Pradesh'), ('AR', 'Arunachal Pradesh'), ('AS', 'Assam'), ('BR', 'Bihar'), ('CH', 'Chandigarh'), ('CT', 'Chhattishgarh'), ('DN', 'Dadra and Nagar Haveli'), ('DD', 'Daman and Diu'), ('GA', 'Goa'), ('GJ', 'Gujarat'), ('HR', 'Haryana'), ('HP', 'Himachal Pradesh'), ('JK', 'Jammu and Kashmir'), ('JH', 'Jharkhand'), ('KA', 'Karnataka'), ('KL', 'Kerala'), ('LD', 'Lakshadweep'), ('MP', 'Madhya Pradesh'), ('MH', 'Maharashtra'), ('MP', 'Manipur'), ('ML', 'Meghalaya'), ('MZ', 'Mizoram'), ('NL', 'Nagaland'), ('OR', 'Odisha'), ('PD', 'Pondicherry'), ('PB', 'Punjab'), ('RJ', 'Rajasthan'), ('SK', 'Sikkim'), ('TN', 'Tamil Nadu'), ('TG', 'Telangana'), ('TR', 'Tripura'), ('UP', 'Uttar Pradesh'), ('UK', 'Uttarakhand'), ('WB', 'West Bengal')], max_length=2, verbose_name='State')),
                ('country', django_countries.fields.CountryField(countries=core.models.OperationalCountries, default='IN', max_length=2, verbose_name='Country')),
                ('postal_code', models.CharField(blank=True, default='', max_length=12, verbose_name='ZIP / Postal Code')),
                ('street_name', models.CharField(max_length=40, verbose_name='Street Name')),
                ('location_details', models.TextField(blank=True, max_length=300, verbose_name='Location details')),
                ('overview', models.TextField(blank=True, max_length=3000, verbose_name='overview')),
                ('staff_details', models.TextField(blank=True, max_length=500, verbose_name='Staff Details')),
                ('content_approver_name', models.CharField(blank=True, max_length=100, verbose_name='Content Approver Name')),
                ('image1', models.ImageField(blank=True, max_length=1024, null=True, upload_to=core.models.hospital_image_upload_file_path, validators=[django.core.validators.validate_image_file_extension], verbose_name='Image1')),
                ('image2', models.ImageField(blank=True, max_length=1024, null=True, upload_to=core.models.hospital_image_upload_file_path, validators=[django.core.validators.validate_image_file_extension], verbose_name='Image2')),
                ('image3', models.ImageField(blank=True, max_length=1024, null=True, upload_to=core.models.hospital_image_upload_file_path, validators=[django.core.validators.validate_image_file_extension], verbose_name='Image3')),
                ('image4', models.ImageField(blank=True, max_length=1024, null=True, upload_to=core.models.hospital_image_upload_file_path, validators=[django.core.validators.validate_image_file_extension], verbose_name='Image4')),
                ('image5', models.ImageField(blank=True, max_length=1024, null=True, upload_to=core.models.hospital_image_upload_file_path, validators=[django.core.validators.validate_image_file_extension], verbose_name='Image5')),
                ('image6', models.ImageField(blank=True, max_length=1024, null=True, upload_to=core.models.hospital_image_upload_file_path, validators=[django.core.validators.validate_image_file_extension], verbose_name='Image6')),
                ('image7', models.ImageField(blank=True, max_length=1024, null=True, upload_to=core.models.hospital_image_upload_file_path, validators=[django.core.validators.validate_image_file_extension], verbose_name='Image7')),
                ('image8', models.ImageField(blank=True, max_length=1024, null=True, upload_to=core.models.hospital_image_upload_file_path, validators=[django.core.validators.validate_image_file_extension], verbose_name='Image8')),
                ('image9', models.ImageField(blank=True, max_length=1024, null=True, upload_to=core.models.hospital_image_upload_file_path, validators=[django.core.validators.validate_image_file_extension], verbose_name='Image9')),
                ('image10', models.ImageField(blank=True, max_length=1024, null=True, upload_to=core.models.hospital_image_upload_file_path, validators=[django.core.validators.validate_image_file_extension], verbose_name='Image10')),
                ('image11', models.ImageField(blank=True, max_length=1024, null=True, upload_to=core.models.hospital_image_upload_file_path, validators=[django.core.validators.validate_image_file_extension], verbose_name='Image11')),
                ('image12', models.ImageField(blank=True, max_length=1024, null=True, upload_to=core.models.hospital_image_upload_file_path, validators=[django.core.validators.validate_image_file_extension], verbose_name='Image12')),
            ],
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name_plural': 'Specialities',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=255, verbose_name='Last Name')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Phone')),
                ('date_of_birth', models.DateField(blank=True, max_length=10, null=True, verbose_name='Date of Birth')),
                ('city', models.CharField(blank=True, max_length=1024, verbose_name='City')),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, verbose_name='Country')),
                ('postal_code', models.CharField(blank=True, default='', max_length=12, verbose_name='ZIP / Postal Code')),
                ('address', models.TextField(blank=True, default='', max_length=1024, verbose_name='Address')),
                ('primary_language', models.CharField(blank=True, choices=[('EN', 'English'), ('BN', 'Bengali'), ('HI', 'Hindi')], max_length=3, null=True, verbose_name='Primary language')),
                ('secondary_language', models.CharField(blank=True, choices=[('EN', 'English'), ('BN', 'Bengali'), ('HI', 'Hindi')], max_length=3, null=True, verbose_name='Secondary language')),
                ('tertiary_language', models.CharField(blank=True, choices=[('EN', 'English'), ('BN', 'Bengali'), ('HI', 'Hindi')], max_length=3, null=True, verbose_name='Tertiary language')),
                ('image', models.ImageField(blank=True, max_length=1024, null=True, upload_to=core.models.user_image_upload_file_path, validators=[django.core.validators.validate_image_file_extension], verbose_name='Image')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model, core.models.Languages),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service', to='core.Hospital')),
            ],
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Name')),
                ('days_in_hospital', models.IntegerField(blank=True, null=True, verbose_name='Days in hospital')),
                ('days_in_destination', models.IntegerField(blank=True, null=True, verbose_name='Days in destination')),
                ('duration_minutes', models.IntegerField(blank=True, null=True, verbose_name='Duration in minutes')),
                ('overview', models.TextField(max_length=1000, verbose_name='Overview')),
                ('other_details', models.TextField(blank=True, max_length=1000, verbose_name='Other details')),
                ('image', models.ImageField(blank=True, max_length=1024, null=True, upload_to=core.models.procedure_image_upload_file_path, validators=[django.core.validators.validate_image_file_extension], verbose_name='Image')),
                ('speciality', models.ManyToManyField(blank=True, related_name='speciality', to='core.Speciality')),
            ],
        ),
        migrations.CreateModel(
            name='HospitalProcedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hospital_procedure', to='core.Hospital')),
                ('procedure', models.ManyToManyField(to='core.Procedure')),
            ],
        ),
        migrations.CreateModel(
            name='HospitalLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('EN', 'English'), ('BN', 'Bengali'), ('HI', 'Hindi')], max_length=3, verbose_name='Language')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hospital_language', to='core.Hospital')),
            ],
        ),
        migrations.CreateModel(
            name='HospitalDoctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hospital_doctor', to='core.Hospital')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, verbose_name='Experience')),
                ('qualification', models.TextField(blank=True, default='', max_length=1024, verbose_name='Qualification')),
                ('highlights', models.TextField(blank=True, default='', max_length=1024, verbose_name='Highlights')),
                ('speciality1', models.ManyToManyField(blank=True, related_name='speciality1', to='core.Speciality')),
                ('speciality2', models.ManyToManyField(blank=True, related_name='speciality2', to='core.Speciality')),
                ('speciality3', models.ManyToManyField(blank=True, related_name='speciality3', to='core.Speciality')),
                ('speciality4', models.ManyToManyField(blank=True, related_name='speciality4', to='core.Speciality')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Accreditation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('image', models.ImageField(blank=True, max_length=1024, null=True, upload_to=core.models.hospital_accreditation_image_upload_file_path, validators=[django.core.validators.validate_image_file_extension], verbose_name='Accreditation image')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accreditation', to='core.Hospital')),
            ],
        ),
    ]
